{"version":3,"sources":["components/BreadCrumbBar.jsx","context.js","components/CharacterDetailsCard.jsx","pages/DetailedCharacterPage.jsx","components/CharacterListItem.jsx","components/CharacterList.jsx","components/FavoritesSideBar.jsx","components/AndOrToggler.jsx","types.js","components/InputFilter.jsx","collections/years.js","components/OptionsForFilter.jsx","components/Filter.jsx","pages/MainPage.jsx","App.jsx","routes.js","index.js"],"names":["BreadCrumbBar","currentLocation","useLocation","pathname","style","marginBottom","className","padding","to","includes","CharacterContext","createContext","CharacterDetailsCard","id","useParams","characterImg","currentCharacter","characters","characterFilms","characterShips","characterHomeworld","characterKind","mapStatefromUrls","urlArr","collection","characteristic","map","url","filter","element","name","push","title","films","starships","species","planets","planet","homeworld","src","alt","color","fontWeight","fontSize","minWidth","join","width","length","DetailedCharacterPage","CharacterListItem","character","history","useHistory","onClick","CharacterList","states","useContext","filteredCharacters","filterCharactersByFilmOptions","filterCharactersBySpeciesOptions","filterCharactersByYearOptions","currentCharacters","filterCharactersByInput","idx","FavoritesSideBar","background","height","backgroundSize","AndOrToggler","type","SET_FILM_URL","SET_FILTER_BY_SPECIES","SET_CHARACTERS_BY_INPUT","SET_CHARACTERS_BY_FILM_OPTION","SET_CHARACTERS_BY_SPECIES_OPTION","SET_CHARACTERS_BY_YEAR_OPTION","SET_MIN_YEAR_OPTION","SET_MAX_YEAR_OPTION","InputFilter","dispatchEvent","onChange","e","filteredData","value","toLowerCase","target","textLength","htmlFor","years","sort","OptionsForFilter","useEffect","filteredByFilmCharacters","Object","values","filmUrl","filteredBySpeciesCharacters","speciesUrl","filteredByYearCharactersMax","birth_year","yearMin","yearMax","types","optionsFilmUrl","optionsSpeciesUrl","display","event","filterValue","makeSpeciesUrlFromTitle","filterByFilm","defaultValue","film","episode_id","filterBySpecies","specie","year","btnStyle","position","top","togglerContStyle","justifyContent","Filter","window","M","AutoInit","MainPage","App","routes","path","exact","useState","setfilmUrl","setfilterByFilm","setspeciesUrl","setyearMin","setyearMax","setfilterCharactersByInput","setfilterCharactersByFilmOptions","setfilterCharactersBySpeciesOptions","setfilterCharactersByYearOptions","Provider","actionType","payload","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6787b9e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport const BreadCrumbBar = () => {\r\n  const usePathname = () => {\r\n    const location = useLocation();\r\n    return location.pathname;\r\n  };\r\n\r\n  const currentLocation = usePathname();\r\n\r\n  return (\r\n    <nav style={{ marginBottom: '20px' }}>\r\n      <div className='nav-wrapper'>\r\n        <div className='col s12' style={{ padding: '0 20px' }}>\r\n          <NavLink to='/people' className='breadcrumb'>\r\n            Main\r\n          </NavLink>\r\n          {currentLocation.includes('details') && (\r\n            <NavLink to='/details/:id' className='breadcrumb'>\r\n              Details\r\n            </NavLink>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import { createContext } from 'react';\r\n\r\nexport const CharacterContext = createContext();\r\n","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport films from '../collections/films.json';\r\nimport species from '../collections/species.json';\r\nimport characters from '../collections/people.json';\r\nimport starships from '../collections/starships.json';\r\nimport planets from '../collections/planets.json';\r\n\r\nexport const CharacterDetailsCard = () => {\r\n  const { id } = useParams();\r\n  const characterImg = `https://starwars-visualguide.com/assets/img//characters/${id}.jpg`;\r\n  const titleStyle = { color: '#b88888', fontWeight: 900, fontSize: '32px' };\r\n  const currentCharacter = characters[id - 1];\r\n  let characterFilms = [];\r\n  let characterShips = [];\r\n  let characterHomeworld = '';\r\n  let characterKind = '';\r\n\r\n  const mapStatefromUrls = (urlArr, collection, characteristic) => {\r\n    urlArr.map((url) =>\r\n      collection.filter((element) => {\r\n        if (url === element.url) {\r\n          if (typeof urlArr === 'string') {\r\n            characteristic = element.name;\r\n          }\r\n          characteristic.push(element.title || element.name);\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  mapStatefromUrls(currentCharacter.films, films, characterFilms);\r\n  mapStatefromUrls(currentCharacter.starships, starships, characterShips);\r\n\r\n  species.filter((element) => {\r\n    if (currentCharacter.species[0] === element.url) {\r\n      characterKind = element.name;\r\n    }\r\n  });\r\n\r\n  planets.filter((planet) => {\r\n    if (currentCharacter.homeworld === planet.url) {\r\n      characterHomeworld = planet.name;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col s10 m12'>\r\n          <div className='card'>\r\n            <div className='card-image'>\r\n              <img src={characterImg} alt={currentCharacter.name} />\r\n              <span className='card-title' style={titleStyle}>\r\n                <b>{currentCharacter.name}</b>\r\n              </span>\r\n            </div>\r\n            <article className='card-content'>\r\n              <div className='spanStyle'>\r\n                <span style={{ minWidth: '20%' }}>Films:</span>\r\n                <span> {characterFilms.join(', ')} </span>\r\n              </div>\r\n\r\n              <div className='spanStyle'>\r\n                <span style={{ width: '20%' }}>Species: </span>\r\n                <span>{characterKind ? characterKind : 'Not specified'}</span>\r\n              </div>\r\n\r\n              <div className='spanStyle'>\r\n                <span style={{ minWidth: '20%' }}>Spaceships: </span>\r\n                <span>\r\n                  {characterShips.length > 0\r\n                    ? characterShips.join(', ')\r\n                    : 'Not specified'}\r\n                </span>\r\n              </div>\r\n              <div className='spanStyle'>\r\n                <span style={{ minWidth: '20%' }}>Homeworld: </span>\r\n                <span> {characterHomeworld}</span>\r\n              </div>\r\n            </article>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { CharacterDetailsCard } from '../components/CharacterDetailsCard';\r\n\r\nexport const DetailedCharacterPage = () => {\r\n  return (\r\n    <div>\r\n      <CharacterDetailsCard />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const CharacterListItem = ({ character, id }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <NavLink\r\n      to={`/details/${id}`}\r\n      className='collection-item'\r\n      onClick={() => history.push(`/details/${id}`)}\r\n    >\r\n      {character.name}\r\n    </NavLink>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { CharacterContext } from '../context';\r\nimport { CharacterListItem } from './CharacterListItem';\r\nimport characters from '../collections/people.json';\r\n\r\nexport const CharacterList = () => {\r\n  const { states } = useContext(CharacterContext);\r\n\r\n  const filteredCharacters =\r\n    states.filterCharactersByFilmOptions.length > 0\r\n      ? states.filterCharactersByFilmOptions\r\n      : states.filterCharactersBySpeciesOptions.length > 0\r\n      ? states.filterCharactersBySpeciesOptions\r\n      : states.filterCharactersByYearOptions.length > 0\r\n      ? states.filterCharactersByYearOptions\r\n      : characters;\r\n\r\n  const currentCharacters = states.filterCharactersByInput.length\r\n    ? states.filterCharactersByInput\r\n    : filteredCharacters;\r\n\r\n  return (\r\n    <div className='collection'>\r\n      {currentCharacters?.map((character, idx) => (\r\n        <CharacterListItem key={idx} character={character} id={idx + 1} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const FavoritesSideBar = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        background:\r\n          'url(https://upload.wikimedia.org/wikipedia/commons/2/20/Polyphemus_planet.jpg)',\r\n        height: '100vh',\r\n        backgroundSize: 'cover',\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const AndOrToggler = () => {\r\n  return (\r\n    <div>\r\n      <label>Choose filter option</label>\r\n      <div className='switch'>\r\n        <label>\r\n          AND\r\n          <input type='checkbox' />\r\n          <span className='lever'></span>\r\n          OR\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const SET_FILM_URL = 'SET_FILM_URL';\r\nexport const SET_FILTER_BY_FILM = 'SET_FILTER_BY_FILM';\r\nexport const SET_FILTER_BY_SPECIES = 'SET_FILTER_BY_SPECIES';\r\nexport const SET_FILTER_BY_YEAR = 'SET_FILTER_BY_YEAR';\r\nexport const SET_CHARACTERS_BY_INPUT = 'SET_CHARACTERS_BY_INPUT';\r\nexport const SET_CHARACTERS_BY_FILM_OPTION = 'SET_CHARACTERS_BY_FILM_OPTION';\r\nexport const SET_CHARACTERS_BY_SPECIES_OPTION =\r\n  'SET_CHARACTERS_BY_SPECIES_OPTION';\r\nexport const SET_CHARACTERS_BY_YEAR_OPTION = 'SET_CHARACTERS_BY_YEAR_OPTION';\r\nexport const SET_MIN_YEAR_OPTION = 'SET_MIN_YEAR_OPTION';\r\nexport const SET_MAX_YEAR_OPTION = 'SET_MAX_YEAR_OPTION';\r\n","import React, { useContext } from 'react';\r\nimport { CharacterContext } from '../context';\r\nimport { SET_CHARACTERS_BY_INPUT } from '../types';\r\nimport characters from '../collections/people.json';\r\n\r\nexport const InputFilter = () => {\r\n  const { dispatchEvent } = useContext(CharacterContext);\r\n\r\n  const handleInputChange = (e) => {\r\n    let filteredData = characters.filter((value) =>\r\n      value.name.toLowerCase().includes(e.target.value.toLowerCase())\r\n    );\r\n\r\n    dispatchEvent(SET_CHARACTERS_BY_INPUT, filteredData);\r\n\r\n    // CLEAR STATE ARRAY OF CHARACTERS WHEN INPUT currentCharacter\r\n    e.target.textLength === 0 && dispatchEvent(SET_CHARACTERS_BY_INPUT, []);\r\n  };\r\n\r\n  return (\r\n    <div className='row'>\r\n      <form className='col s10' onChange={handleInputChange}>\r\n        <div className='row'>\r\n          <div className='input-field col s12'>\r\n            <i className='material-icons prefix'>mode_edit</i>\r\n            <textarea\r\n              id='icon_prefix2'\r\n              className='materialize-textarea'\r\n            ></textarea>\r\n            <label htmlFor='icon_prefix2'>Serch here...</label>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","export const years = [\r\n  '19BBY',\r\n  '112BBY',\r\n  '33BBY',\r\n  '41.9BBY',\r\n  '19BBY',\r\n  '52BBY',\r\n  '47BBY',\r\n  '24BBY',\r\n  '57BBY',\r\n].sort();\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { CharacterContext } from '../context';\r\nimport * as types from '../types';\r\nimport { years } from '../collections/years';\r\nimport films from '../collections/films.json';\r\nimport species from '../collections/species.json';\r\nimport characters from '../collections/people.json';\r\n\r\nexport const OptionsForFilter = () => {\r\n  const { states, dispatchEvent } = useContext(CharacterContext);\r\n\r\n  useEffect(() => {\r\n    const filteredByFilmCharacters = characters.filter((character) =>\r\n      Object.values(character.films).includes(states.filmUrl)\r\n    );\r\n\r\n    const filteredBySpeciesCharacters = characters.filter((character) =>\r\n      Object.values(character.species).includes(states.speciesUrl)\r\n    );\r\n\r\n    const filteredByYearCharactersMin = characters.filter(\r\n      (character) => character.birth_year >= states.yearMin\r\n    );\r\n\r\n    const filteredByYearCharactersMax = filteredByYearCharactersMin.filter(\r\n      (character) => character.birth_year <= states.yearMax\r\n    );\r\n\r\n    if (filteredByFilmCharacters.length > 0) {\r\n      dispatchEvent(\r\n        types.SET_CHARACTERS_BY_FILM_OPTION,\r\n        filteredByFilmCharacters\r\n      );\r\n    }\r\n\r\n    if (filteredBySpeciesCharacters.length > 0) {\r\n      dispatchEvent(\r\n        types.SET_CHARACTERS_BY_SPECIES_OPTION,\r\n        filteredBySpeciesCharacters\r\n      );\r\n    }\r\n\r\n    if (filteredByYearCharactersMax.length > 0) {\r\n      dispatchEvent(\r\n        types.SET_CHARACTERS_BY_YEAR_OPTION,\r\n        filteredByYearCharactersMax\r\n      );\r\n    }\r\n\r\n    // CLEAR STATE ARRAY OF CHARACTERS WHEN INPUT EMPTY\r\n    if (states.filmUrl === '') {\r\n      dispatchEvent(types.SET_CHARACTERS_BY_FILM_OPTION, []);\r\n    }\r\n\r\n    if (states.speciesUrl === '') {\r\n      dispatchEvent(types.SET_CHARACTERS_BY_SPECIES_OPTION, []);\r\n    }\r\n\r\n    if (states.yearMin === '' && states.yearMax === '') {\r\n      dispatchEvent(types.SET_CHARACTERS_BY_YEAR_OPTION, []);\r\n    }\r\n  }, [states.filmUrl, states.speciesUrl, states.yearMin, states.yearMax]);\r\n\r\n  let optionsFilmUrl = '';\r\n  let optionsSpeciesUrl = '';\r\n\r\n  const makeFilmUrlFromTitle = (filterValue) => {\r\n    films.filter((element) => {\r\n      if (filterValue === element.title) {\r\n        optionsFilmUrl = element.url;\r\n      }\r\n    });\r\n  };\r\n\r\n  const makeSpeciesUrlFromTitle = (filterValue) => {\r\n    species.filter((element) => {\r\n      if (filterValue === element.name) {\r\n        optionsSpeciesUrl = element.url;\r\n      }\r\n    });\r\n  };\r\n\r\n  // HANDLING VALUES CHOOSEN FROM OPTIONS DROPDOWN\r\n  const handleFilterChange = (event) => {\r\n    const value = event.target.value;\r\n\r\n    if (event.target.name === 'movie-select') {\r\n      makeFilmUrlFromTitle(value);\r\n      dispatchEvent(types.SET_FILM_URL, optionsFilmUrl);\r\n    }\r\n    if (event.target.name === 'species-select') {\r\n      makeSpeciesUrlFromTitle(value);\r\n      dispatchEvent(types.SET_FILTER_BY_SPECIES, optionsSpeciesUrl);\r\n    }\r\n    if (event.target.name === 'year-select-min') {\r\n      dispatchEvent(types.SET_MIN_YEAR_OPTION, value);\r\n    }\r\n    if (event.target.name === 'year-select-max') {\r\n      dispatchEvent(types.SET_MAX_YEAR_OPTION, value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section\r\n      style={{ display: 'flex', marginBottom: '50px' }}\r\n      onChange={handleFilterChange}\r\n    >\r\n      <div className='input-field col s12' id='selectDiv'>\r\n        <select name='movie-select' id='select-movie'>\r\n          <option\r\n            value={states.filterByFilm}\r\n            defaultValue={states.filterByFilm}\r\n          >\r\n            Choose...\r\n          </option>\r\n          {films.map((film) => (\r\n            <option key={film.episode_id} value={film.title}>\r\n              {film.title}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Film</label>\r\n      </div>\r\n      <div className='input-field col s12'>\r\n        <select name='species-select' id='select-species'>\r\n          <option value='' defaultValue={states.filterBySpecies}>\r\n            Choose...\r\n          </option>\r\n          {species.map((specie) => (\r\n            <option key={specie.url} value={specie.name} name='species'>\r\n              {specie.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Species</label>\r\n      </div>\r\n      <div className='input-field col s10'>\r\n        <select name='year-select-min' id='select-year-min'>\r\n          <option value='' defaultValue={states.yearMin}>\r\n            Choose min...\r\n          </option>\r\n          {years.map((year, idx) => (\r\n            <option key={idx} value={year}>\r\n              {year}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label>Birth year range</label>\r\n        <select name='year-select-max' id='select-year-max'>\r\n          <option value='' defaultValue={states.yearMax}>\r\n            Choose max...\r\n          </option>\r\n          {years.map((year, idx) => (\r\n            <option key={idx} value={year}>\r\n              {year}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label></label>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { AndOrToggler } from './AndOrToggler';\r\nimport { InputFilter } from './InputFilter';\r\nimport { OptionsForFilter } from './OptionsForFilter';\r\nimport * as types from '../types';\r\nimport { CharacterContext } from '../context';\r\nconst btnStyle = { position: 'absolute', top: '100px', fontSize: '12px' };\r\nconst togglerContStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  width: '100%',\r\n  height: 'auto',\r\n};\r\n\r\nexport const Filter = () => {\r\n  useEffect(() => {\r\n    window.M.AutoInit();\r\n  }, []);\r\n\r\n  const { dispatchEvent } = useContext(CharacterContext);\r\n\r\n  const clearOptions = () => {\r\n    dispatchEvent(types.SET_FILM_URL, '');\r\n    dispatchEvent(types.SET_FILTER_BY_SPECIES, '');\r\n    dispatchEvent(types.SET_MIN_YEAR_OPTION, '');\r\n    dispatchEvent(types.SET_MAX_YEAR_OPTION, '');\r\n  };\r\n\r\n  return (\r\n    <section style={{ position: 'relative' }}>\r\n      <button\r\n        style={btnStyle}\r\n        className='waves-effect waves-light btn'\r\n        onClick={clearOptions}\r\n      >\r\n        Clear all\r\n      </button>\r\n      <OptionsForFilter />\r\n      <div style={togglerContStyle}>\r\n        <AndOrToggler />\r\n        <InputFilter />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { CharacterList } from '../components/CharacterList';\r\nimport { FavoritesSideBar } from '../components/FavoritesSideBar';\r\nimport { Filter } from '../components/Filter';\r\n\r\nexport const MainPage = () => {\r\n  return (\r\n    <div className='row'>\r\n      <div className='col s12 m4 l3'>\r\n        <FavoritesSideBar />\r\n      </div>\r\n      <div className='col s12 m8 l9'>\r\n        <Filter />\r\n        <CharacterList />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { BreadCrumbBar } from './components/BreadCrumbBar';\nimport { CharacterContext } from './context';\nimport { useRoutes } from './routes';\nimport * as types from './types';\n\nimport 'materialize-css';\n\nexport const App = () => {\n  const routes = useRoutes();\n\n  const [filmUrl, setfilmUrl] = useState('');\n  const [filterByFilm, setfilterByFilm] = useState('');\n  const [speciesUrl, setspeciesUrl] = useState('');\n  const [yearMin, setyearMin] = useState('');\n  const [yearMax, setyearMax] = useState('');\n  const [filterCharactersByInput, setfilterCharactersByInput] = useState([]);\n  const [filterCharactersByFilmOptions, setfilterCharactersByFilmOptions] =\n    useState([]);\n  const [\n    filterCharactersBySpeciesOptions,\n    setfilterCharactersBySpeciesOptions,\n  ] = useState([]);\n  const [filterCharactersByYearOptions, setfilterCharactersByYearOptions] =\n    useState([]);\n\n  const dispatchEvent = (actionType, payload) => {\n    switch (actionType) {\n      case types.SET_FILM_URL:\n        setfilmUrl(payload);\n        return;\n      case types.SET_FILTER_BY_FILM:\n        setfilterByFilm(payload);\n        return;\n      case types.SET_FILTER_BY_SPECIES:\n        setspeciesUrl(payload);\n        return;\n      case types.SET_MIN_YEAR_OPTION:\n        setyearMin(payload);\n        return;\n      case types.SET_MAX_YEAR_OPTION:\n        setyearMax(payload);\n        return;\n      case types.SET_CHARACTERS_BY_INPUT:\n        setfilterCharactersByInput(payload);\n        return;\n      case types.SET_CHARACTERS_BY_FILM_OPTION:\n        setfilterCharactersByFilmOptions(payload);\n        return;\n      case types.SET_CHARACTERS_BY_SPECIES_OPTION:\n        setfilterCharactersBySpeciesOptions(payload);\n        return;\n      case types.SET_CHARACTERS_BY_YEAR_OPTION:\n        setfilterCharactersByYearOptions(payload);\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  const states = {\n    filmUrl,\n    yearMin,\n    yearMax,\n    speciesUrl,\n    filterByFilm,\n    filterCharactersByInput,\n    filterCharactersByFilmOptions,\n    filterCharactersBySpeciesOptions,\n    filterCharactersByYearOptions,\n  };\n\n  return (\n    <CharacterContext.Provider value={{ states, dispatchEvent }}>\n      <Router>\n        <div className='container'>\n          <BreadCrumbBar />\n          {routes}\n        </div>\n      </Router>\n    </CharacterContext.Provider>\n  );\n};\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router';\r\nimport { DetailedCharacterPage } from './pages/DetailedCharacterPage';\r\nimport { MainPage } from './pages/MainPage';\r\n\r\nexport const useRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path='/people' exact>\r\n        <MainPage />\r\n      </Route>\r\n      <Route path='/details/:id' exact>\r\n        <DetailedCharacterPage />\r\n      </Route>\r\n      <Redirect to='/people' />\r\n    </Switch>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}